///////////////////////////////////////////////////////////////////////////////
// File Name      : file.cpp
// Date(Modify)   : 2005. 12. 9
// Compiler       : g++ 2.9.6
// OS             : Redhat Linux 7.1
// Author         : 김태형
// StudentID      : 2000120007
// ============================================================================
// Version        : 1.0.0
// Description    : 파일을 열고, 읽고, 쓰고, 닫는 기능을 가진 파일 클래스 (구현)
// Etc            : Data Structure Assignment 3
///////////////////////////////////////////////////////////////////////////////

#include "file.h"




///////////////////////////////////////////////////////////////////////////////
// Function : CFile::CFile()
//=============================================================================
// Input    : 없음
// Output   : 없음
// Purpose  : 기본 생성자
///////////////////////////////////////////////////////////////////////////////
CFile::CFile()
{
}




///////////////////////////////////////////////////////////////////////////////
// Function : CFile::~CFile()
//=============================================================================
// Input    : 없음
// Output   : 없음
// Purpose  : 기본 소멸자
///////////////////////////////////////////////////////////////////////////////
CFile::~CFile()
{
}




///////////////////////////////////////////////////////////////////////////////
// Function : void CFile::Open(const char * szFileName, const int nMode)
//=============================================================================
// Input    : 파일 이름, 파일 모드
// Output   : 없음
// Purpose  : 파일 모드 형식으로 파일 이름을 염
///////////////////////////////////////////////////////////////////////////////
void CFile::Open(const char * szFileName, const int nMode)
{
	if(nMode == ios::in)
		fin.open(szFileName, nMode);  // ios::in 모드로 szFileName 파일 열기
	else if(nMode == ios::out)
		fout.open(szFileName, nMode);  // ios::out 모드로 szFileName 파일 열기
	else if(nMode == (ios::out | ios::app))
		fout.open(szFileName, nMode);  // ios::out | ios::app 모드로 szFileName 파일 열기
	else
		cout << "잘못된 파일 모드가 입력되어서 열 수 없습니다.\n";
}




///////////////////////////////////////////////////////////////////////////////
// Function : void CFile::Close()
//=============================================================================
// Input    : 없음
// Output   : 없음
// Purpose  : fin 또는 fout 객체가 열려있으면 닫기
///////////////////////////////////////////////////////////////////////////////
void CFile::Close()
{
	if(fin.is_open())  // fin이 열려있으면 닫기
		fin.close();
	else if(fout.is_open())  // fout이 열려있으면 닫기
		fout.close();
	else
		cout << "열려있는 파일이 없습니다.\n";
}




///////////////////////////////////////////////////////////////////////////////
// Function : char * CFile::ReadLine()
//=============================================================================
// Input    : 없음
// Output   : 파일에서 읽은 한줄
// Purpose  : 파일에서 한줄을 읽은 뒤 반환
///////////////////////////////////////////////////////////////////////////////
char * CFile::ReadLine()
{
	fin.getline(m_szBuffer, sizeof(m_szBuffer));  // 파일에서 한줄 읽어와서 저장
	
	if(strlen(m_szBuffer) == 0)  // 읽어들인 문자열이 없으면 null 반환
		return 0;
	else
		return m_szBuffer;
}




///////////////////////////////////////////////////////////////////////////////
// Function : void CFile::WriteLine(const char * str)
//=============================================================================
// Input    : 파일에 쓸 문자열
// Output   : 없음
// Purpose  : 파일에 문자열을 한줄 씀
///////////////////////////////////////////////////////////////////////////////
void CFile::WriteLine(const char * str)
{
	fout << str;
}




///////////////////////////////////////////////////////////////////////////////
// Function : void CFile::WriteLine(const int n)
//=============================================================================
// Input    : 파일에 쓸 정수
// Output   : 없음
// Purpose  : 파일에 정수를 씀
///////////////////////////////////////////////////////////////////////////////
void CFile::WriteLine(const int n)
{
	fout << n;
}
