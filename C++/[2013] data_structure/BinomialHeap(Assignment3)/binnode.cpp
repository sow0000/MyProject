///////////////////////////////////////////////////////////////////////////////
// File Name      : binnode.cpp
// Date(Modify)   : 2005. 12. 9
// Compiler       : g++ 2.9.6
// OS             : Redhat Linux 7.1
// Author         : 김태형
// StudentID      : 2000120007
// ============================================================================
// Version        : 1.0.0
// Description    : Binomial Tree의 노드 (구현)
// Etc            : Data Structure Assignment 3
///////////////////////////////////////////////////////////////////////////////

#include "binnode.h"




///////////////////////////////////////////////////////////////////////////////
// Function : CBinNode::CBinNode()
//=============================================================================
// Input    : 없음
// Output   : 없음
// Purpose  : 기본 생성자(멤버변수 초기화)
///////////////////////////////////////////////////////////////////////////////
CBinNode::CBinNode()
{
	// 노드의 index, 시작 주소, 크기, 자식 수를 0으로 초기화
	m_nIndex = 0;
	m_nStartAdress = 0;
	m_nSize = 0;
	m_nChildDegree = 0;

	// 노드의 연결 포인터를 NULL로 초기화
	pBrother = 0;
	pChild = 0;
	pNext = 0;
}




///////////////////////////////////////////////////////////////////////////////
// Function : CBinNode::CBinNode(const int nIndex, const int nPosition, const int nSize)
//=============================================================================
// Input    : index, 시작주소, 크기
// Output   : 없음
// Purpose  : 해당 index와 시작주소, 크기를 가진 노드를 생성
///////////////////////////////////////////////////////////////////////////////
CBinNode::CBinNode(const int nIndex, const int nPosition, const int nSize)
{
	m_nIndex = nIndex;  // Memory Block index 저장
	m_nStartAdress = nPosition;  // Memory Block 시작 위치 저장
	m_nSize = nSize;  // Memory Block 크기 저장
	m_nChildDegree = 0;  // Memory Block의 자식 수 0으로 저장
	
	// 노드의 연결 포인터를 NULL로 초기화
	pBrother = 0;
	pChild = 0;
	pNext = 0;
}




///////////////////////////////////////////////////////////////////////////////
// Function : CBinNode::~CBinNode()
//=============================================================================
// Input    : 없음
// Output   : 없음
// Purpose  : 기본 소멸자
///////////////////////////////////////////////////////////////////////////////
CBinNode::~CBinNode()
{
}




///////////////////////////////////////////////////////////////////////////////
// Function : void CBinNode::Initialize()
//=============================================================================
// Input    : 없음
// Output   : 없음
// Purpose  : 시작주소와, 크기를 제외한 멤버변수를 초기화
///////////////////////////////////////////////////////////////////////////////
void CBinNode::Initialize()
{
	// 노드의 index, 자식 수를 0으로 초기화
	m_nIndex = 0;
	m_nChildDegree = 0;
	
	// 노드의 연결 포인터를 NULL로 초기화
	pBrother = 0;
	pChild = 0;
	pNext = 0;
}




///////////////////////////////////////////////////////////////////////////////
// Function : 
//=============================================================================
// Input    : 
// Output   : 
// Purpose  : 
///////////////////////////////////////////////////////////////////////////////
int CBinNode::GetIndex()
{
	return m_nIndex;
}




///////////////////////////////////////////////////////////////////////////////
// Function : int CBinNode::GetStartAdress()
//=============================================================================
// Input    : 없음
// Output   : 시작 주소
// Purpose  : 노드(메모리)의 시작 주소를 반환
///////////////////////////////////////////////////////////////////////////////
int CBinNode::GetStartAdress()
{
	return m_nStartAdress;
}




///////////////////////////////////////////////////////////////////////////////
// Function : int CBinNode::GetSize()
//=============================================================================
// Input    : 없음
// Output   : 크기
// Purpose  : 노드(메모리)의 크기를 반환
///////////////////////////////////////////////////////////////////////////////
int CBinNode::GetSize()
{
	return m_nSize;
}
